name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, curl, zip, bcmath, gd, intl, mysql, sqlite3
          coverage: none

      - name: Install Composer
        run: sudo apt-get install -y composer

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.15.0'

      - name: Install NPM dependencies
        run: npm install

      - name: Install PHP dependencies
        run: composer install

      - name: Copy .env file
        run: cp .env.example .env

      - name: Generate Laravel APP_KEY
        run: php artisan key:generate

      - name: Generate Passport keys
        run: php artisan passport:keys

      - name: Generate Database SQLite
        run: touch database/database.sqlite

      - name: Run migrations
        run: php artisan migrate:refresh

      - name: Build assets
        run: npm run build

      - name: Run tests
        run: php artisan test

      - name: Install SonarScanner
        run: |
          wget -O sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          unzip sonar-scanner.zip -d $HOME
          export PATH="$HOME/sonar-scanner-4.6.2.2472-linux/bin:$PATH"

      - name: Run SonarQube Analysis
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
          -Dsonar.projectKey=your_project_key \
          -Dsonar.sources=. \
          -Dsonar.php.coverage.reportPaths=coverage.xml
