name: CI/CD for Laravel Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
          MYSQL_USER: laravel
          MYSQL_PASSWORD: secret
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, pdo_mysql, intl, bcmath, xml, curl, json, dom, fileinfo
          ini-values: post_max_size=256M, upload_max_filesize=256M, memory_limit=512M
          coverage: none

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cp .env.example .env
          composer install --prefer-dist --no-progress --no-interaction
          npm install
          php artisan key:generate

      - name: Clear config cache
        run: php artisan config:clear

      - name: Clear route cache
        run: php artisan route:clear

      - name: Run migrations
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel
          DB_USERNAME: laravel
          DB_PASSWORD: secret
        run: php artisan migrate --force

      - name: Install Passport
        run: php artisan passport:install

      - name: Run tests
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: laravel
          DB_USERNAME: laravel
          DB_PASSWORD: secret
        run: php artisan test

      - name: Build assets
        run: npm run build

      - name: Lint PHP code
        run: composer lint

      - name: Lint JS code
        run: npm run lint
